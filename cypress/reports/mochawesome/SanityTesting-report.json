{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-24T03:51:56.448Z",
    "end": "2023-11-24T03:59:15.367Z",
    "duration": 438919,
    "testsRegistered": 9,
    "passPercent": 44.44444444444444,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "8011b53d-573c-483e-86de-cd707d0ae665",
      "title": "",
      "fullFile": "cypress\\e2e\\SanityTesting.cy.js",
      "file": "cypress\\e2e\\SanityTesting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50da1df2-d442-4458-af27-d6bef442c473",
          "title": "low balance testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if the balance is enough to buy the data pack",
              "fullTitle": "low balance testing checks if the balance is enough to buy the data pack",
              "timedOut": null,
              "duration": 33639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" balance', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});\ncy.fixture(\"TestData.json\").then(testData => {\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n    const parsedBalance = parseFloat(data.balance);\n    const packValueString = testData.pack;\n    const match = packValueString.match(/\\d+/);\n    const packValue = parseInt(match[0]);\n    console.log(parsedBalance, \"parsedbalance\");\n    console.log(match[0], \"packvalue\");\n    if (parsedBalance < match[0]) {\n      cy.log(\"Balance is insufficient to buy the data pack\");\n      expect(parsedBalance).to.be.lessThan(packValue);\n    } else if (parsedBalance >= match[0]) {\n      cy.log(\"Balance is sufficient to buy the data pack\");\n      expect(parsedBalance).to.be.gte(packValue);\n    } else {\n      throw new Error(\"Invalid balance value\");\n    }\n  });\n});",
              "err": {},
              "uuid": "f935599c-f2f4-40eb-9950-2c39b05c490f",
              "parentUUID": "50da1df2-d442-4458-af27-d6bef442c473",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buys the Rs 265 voice pack",
              "fullTitle": "low balance testing buys the Rs 265 voice pack",
              "timedOut": null,
              "duration": 69726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.visit(\"https://www.ncell.axiata.com/en/individual/data-and-voice?packageCategories=data-packs\");\n  cy.contains(\"Load More\").click();\n  cy.wait(2000);\n  // cy.contains(testData.packName).click();\n  cy.contains(testData.pack).click();\n  cy.contains(\"Buy Now\").click();\n  cy.get('[name=\"phoneNumber\"]').type(testData.phoneNumber);\n  cy.contains(\"Continue\").click();\n  cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" otp BuyOTP', {\n    log: true\n  }).then(({\n    stdout,\n    stderr\n  }) => {\n    if (stdout) {\n      cy.log(`Standard output:\\n${stdout}`);\n    }\n    if (stderr) {\n      cy.log(`Error output:\\n${stderr}`);\n    }\n    cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(otpObject => {\n      const otp = otpObject.BuyOTP;\n      cy.log(`Read OTP value: ${otp}`);\n      for (let i = 0; i < otp.length; i++) {\n        cy.get(`input[aria-label*=\"Character ${i + 1}\"]`).type(otp.charAt(i));\n      }\n    });\n    cy.contains(\"Continue\").click();\n    cy.contains(\"Insufficient Balance\").should(\"be.visible\");\n  });\n});",
              "err": {},
              "uuid": "4654ec47-8230-458f-8b71-a2049ce6cc66",
              "parentUUID": "50da1df2-d442-4458-af27-d6bef442c473",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f935599c-f2f4-40eb-9950-2c39b05c490f",
            "4654ec47-8230-458f-8b71-a2049ce6cc66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9292becd-93fd-4ab3-8319-2f75eeb3c4ad",
          "title": "adequate balance testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if the balance is enough to buy the data pack",
              "fullTitle": "adequate balance testing checks if the balance is enough to buy the data pack",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n    const parsedBalance = parseFloat(data.balance);\n    const packValueString = testData.pack;\n    const match = packValueString.match(/\\d+/);\n    const packValue = parseInt(match[0]);\n    console.log(parsedBalance, \"parsedbalance\");\n    console.log(match[0], \"packvalue\");\n    if (parsedBalance < match[0]) {\n      cy.log(\"Balance is insufficient to buy the data pack\");\n      expect(parsedBalance).to.be.lessThan(packValue);\n    } else if (parsedBalance >= match[0]) {\n      cy.log(\"Balance is sufficient to buy the data pack\");\n    } else {\n      throw new Error(\"Invalid balance value\");\n    }\n  });\n});",
              "err": {},
              "uuid": "7bf2352e-d4bd-4e88-b16f-3cd7f763abef",
              "parentUUID": "9292becd-93fd-4ab3-8319-2f75eeb3c4ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buys the Rs 265 voice pack",
              "fullTitle": "adequate balance testing buys the Rs 265 voice pack",
              "timedOut": null,
              "duration": 39050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" buyDataPack', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});",
              "err": {},
              "uuid": "497a5566-4940-433f-b050-2398b3fb041e",
              "parentUUID": "9292becd-93fd-4ab3-8319-2f75eeb3c4ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks if the product has been activated or not",
              "fullTitle": "adequate balance testing checks if the product has been activated or not",
              "timedOut": null,
              "duration": 23420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.ncell.axiata.com/en/auth/login\");\ncy.fixture(\"TestData.json\").then(testData => {\n  Login(testData.phoneNumber, testData.password);\n  cy.wait(10000);\n  cy.contains(testData.packName);\n  cy.contains(\"button.btn_secondary.btm__btn\", \"Details\").click();\n  cy.contains(testData.packResource);\n  cy.get(\"p.list_title\").contains(testData.dashboardName);\n  cy.contains(\"p.list_title\", testData.dashboardName).closest(\".single_list\") //.closest finds the closest element in regards to the parent element\n  .find(\".progress-bar\").should(\"have.attr\", \"aria-valuenow\", \"100%\");\n  cy.contains();\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1 Day - 200MB' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1 Day - 200MB' but never did.\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:146:9)",
                "diff": null
              },
              "uuid": "49f82edb-e218-4299-b9e2-b833ec1b0c1f",
              "parentUUID": "9292becd-93fd-4ab3-8319-2f75eeb3c4ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bf2352e-d4bd-4e88-b16f-3cd7f763abef",
            "497a5566-4940-433f-b050-2398b3fb041e"
          ],
          "failures": [
            "49f82edb-e218-4299-b9e2-b833ec1b0c1f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 62890,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8f8df4a-55bc-417c-8293-42ee0dbb8779",
          "title": "Resource usage testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Uses a app for 1 minute",
              "fullTitle": "Resource usage testing Uses a app for 1 minute",
              "timedOut": null,
              "duration": 89759,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile Testing/Samsung.js\" usageTest', {\n  timeout: 90000\n});",
              "err": {},
              "uuid": "6dfef6b4-8d1f-46cf-a5ac-af27311d6e9a",
              "parentUUID": "e8f8df4a-55bc-417c-8293-42ee0dbb8779",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the data usage after using the app",
              "fullTitle": "Resource usage testing Checks the data usage after using the app",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  Login(testData.phoneNumber, testData.password);\n  cy.wait(10000);\n  cy.get(\"p.list_title\").contains(testData.dashboardName).should(\"exist\");\n  // cy.contains(\"p.list_title\", \"Of Rs 25 Data\")\n  //   .closest(\".single_list\")\n  //   .find(\".progress-bar\")\n  //   .invoke(\"attr\", \"aria-valuenow\")\n  //   .then((value) => {\n  //     const currentValue = parseInt(value.replace(\"%\", \"\"), 10);\n  //     expect(currentValue).to.be.lessThan(100);\n  //   });\n  const packNameToCheck = data.packName; // Retrieve the pack name from the fixture\n  // Find the pack-related element\n  cy.contains(\".list_title\", packNameToCheck).then($packElement => {\n    // Traverse to the progress bar associated with this pack\n    const progressBar = $packElement.closest(\".single_list\").find(\".progress-bar\");\n    // Get the width of the progress bar\n    const progressBarWidth = parseFloat(progressBar.css(\"width\"));\n    // Assert the progress bar value is less than 100% (change the condition based on your requirement)\n    expect(progressBarWidth).to.be.lessThan(100);\n  });\n});",
              "err": {},
              "uuid": "27ecc063-b458-4f81-95d8-996467e01f8c",
              "parentUUID": "e8f8df4a-55bc-417c-8293-42ee0dbb8779",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6dfef6b4-8d1f-46cf-a5ac-af27311d6e9a"
          ],
          "pending": [],
          "skipped": [
            "27ecc063-b458-4f81-95d8-996467e01f8c"
          ],
          "duration": 89759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "256a3d6a-6745-4ac1-950f-695a51b420aa",
          "title": "Multiple activation testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if multiple activation is allowed or not",
              "fullTitle": "Multiple activation testing checks if multiple activation is allowed or not",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.log(testData.packName);\n  cy.log(testData.packResource);\n  cy.log(testData.balance);\n  cy.log(testData.dashboardName);\n});",
              "err": {},
              "uuid": "6d40dffc-f589-434b-93e0-9cc75139eff7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "checks the priority between two packs according to their validity",
              "fullTitle": "Multiple activation testing checks the priority between two packs according to their validity",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://ncell.axiata.com/en/dashboard\").should(\"have.text\", \"5 Hours Unlimited Data\");",
              "err": {},
              "uuid": "0cbcb851-ed9d-4940-9f6c-d69f735929b0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6d40dffc-f589-434b-93e0-9cc75139eff7",
            "0cbcb851-ed9d-4940-9f6c-d69f735929b0"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "reportFilename": "[name]-report",
        "overwrite": true,
        "html": true,
        "json": true,
        "inline": true,
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}