{
  "stats": {
    "suites": 10,
    "tests": 16,
    "passes": 11,
    "pending": 0,
    "failures": 5,
    "start": "2023-11-27T04:22:10.419Z",
    "end": "2023-11-27T04:37:16.578Z",
    "duration": 906159,
    "testsRegistered": 16,
    "passPercent": 68.75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1e65dec6-a853-4e4a-bc5c-e257c0464d3f",
      "title": "",
      "fullFile": "cypress\\e2e\\SanityTesting.cy.js",
      "file": "cypress\\e2e\\SanityTesting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3cb99bb9-2a43-452b-b44d-7a87bafa863d",
          "title": "Fixture 1",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "00e58842-6fb1-4c3d-a19c-2958f78a337a",
              "title": "low balance testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "checks if the balance is enough to buy the data pack",
                  "fullTitle": "Fixture 1 low balance testing checks if the balance is enough to buy the data pack",
                  "timedOut": null,
                  "duration": 33837,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" balance', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});\ncy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n  const parsedBalance = parseFloat(data.balance);\n  const packValueString = fixtureData.pack;\n  const match = packValueString.match(/\\d+/);\n  const packValue = parseInt(match[0]);\n  console.log(parsedBalance, \"parsedbalance\");\n  console.log(match[0], \"packvalue\");\n  if (parsedBalance < match[0]) {\n    cy.log(\"Balance is insufficient to buy the data pack\");\n    expect(parsedBalance).to.be.lessThan(packValue);\n  } else if (parsedBalance >= match[0]) {\n    cy.log(\"Balance is sufficient to buy the data pack\");\n    expect(parsedBalance).to.be.gte(packValue);\n  } else {\n    throw new Error(\"Invalid balance value\");\n  }\n});",
                  "err": {},
                  "uuid": "8999d3b5-f2b1-41fe-af1b-67227cdb239e",
                  "parentUUID": "00e58842-6fb1-4c3d-a19c-2958f78a337a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "buys the Rs 265 voice pack",
                  "fullTitle": "Fixture 1 low balance testing buys the Rs 265 voice pack",
                  "timedOut": null,
                  "duration": 68304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(\"https://www.ncell.axiata.com/en/individual/data-and-voice?packageCategories=data-packs\");\ncy.contains(\"Load More\").click();\ncy.wait(2000);\n// cy.contains(testData.packName).click();\ncy.contains(fixtureData.pack).click();\ncy.contains(\"Buy Now\").click();\ncy.get('[name=\"phoneNumber\"]').type(fixtureData.phoneNumber);\ncy.contains(\"Continue\").click();\ncy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" otp BuyOTP', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(otpObject => {\n    const otp = otpObject.BuyOTP;\n    cy.log(`Read OTP value: ${otp}`);\n    for (let i = 0; i < otp.length; i++) {\n      cy.get(`input[aria-label*=\"Character ${i + 1}\"]`).type(otp.charAt(i));\n    }\n  });\n  cy.contains(\"Continue\").click();\n  cy.contains(\"Insufficient Balance\").should(\"be.visible\");\n});",
                  "err": {},
                  "uuid": "ab54d919-7e7b-4139-b9a5-83f630d43538",
                  "parentUUID": "00e58842-6fb1-4c3d-a19c-2958f78a337a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8999d3b5-f2b1-41fe-af1b-67227cdb239e",
                "ab54d919-7e7b-4139-b9a5-83f630d43538"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 102141,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "03b9ab00-00d1-44aa-b3c9-278dae0b3ae5",
              "title": "adequate balance testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "checks if the balance is enough to buy the data pack",
                  "fullTitle": "Fixture 1 adequate balance testing checks if the balance is enough to buy the data pack",
                  "timedOut": null,
                  "duration": 594,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n  const parsedBalance = parseFloat(data.balance);\n  const packValueString = fixtureData.pack;\n  const match = packValueString.match(/\\d+/);\n  const packValue = parseInt(match[0]);\n  console.log(parsedBalance, \"parsedbalance\");\n  console.log(match[0], \"packvalue\");\n  if (parsedBalance < match[0]) {\n    cy.log(\"Balance is insufficient to buy the data pack\");\n    expect(parsedBalance).to.be.lessThan(packValue);\n  } else if (parsedBalance >= match[0]) {\n    cy.log(\"Balance is sufficient to buy the data pack\");\n  } else {\n    throw new Error(\"Invalid balance value\");\n  }\n});",
                  "err": {},
                  "uuid": "31ccfd2b-408f-4f1f-9e32-f26ae197eba8",
                  "parentUUID": "03b9ab00-00d1-44aa-b3c9-278dae0b3ae5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "buys the Rs 265 voice pack",
                  "fullTitle": "Fixture 1 adequate balance testing buys the Rs 265 voice pack",
                  "timedOut": null,
                  "duration": 40500,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" buyDataPack', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});",
                  "err": {},
                  "uuid": "f1d4e985-7cc6-4e28-bfc3-d49b813c2b22",
                  "parentUUID": "03b9ab00-00d1-44aa-b3c9-278dae0b3ae5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "checks if the product has been activated or not",
                  "fullTitle": "Fixture 1 adequate balance testing checks if the product has been activated or not",
                  "timedOut": null,
                  "duration": 31734,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(\"https://www.ncell.axiata.com/en/auth/login\");\nLogin(fixtureData.phoneNumber, fixtureData.password);\ncy.wait(10000);\ncy.contains(fixtureData.packName);\ncy.contains(\"button.btn_secondary.btm__btn\", \"Details\").click();\ncy.contains(fixtureData.packResource);\ncy.get(\"p.list_title\").contains(fixtureData.dashboardName);\ncy.contains(\"p.list_title\", fixtureData.dashboardName).closest(\".single_list\") //.closest finds the closest element in regards to the parent element\n.find(\".progress-bar\").should(\"have.attr\", \"aria-valuenow\", \"100%\");\ncy.contains();",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1 Day - 200MB' but never did.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1 Day - 200MB' but never did.\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:141:9)",
                    "diff": null
                  },
                  "uuid": "0975ffb6-cf97-4e90-8251-f77a6554db2b",
                  "parentUUID": "03b9ab00-00d1-44aa-b3c9-278dae0b3ae5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31ccfd2b-408f-4f1f-9e32-f26ae197eba8",
                "f1d4e985-7cc6-4e28-bfc3-d49b813c2b22"
              ],
              "failures": [
                "0975ffb6-cf97-4e90-8251-f77a6554db2b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 72828,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "435dd595-9423-4917-aadc-73f175acaf25",
              "title": "Resource usage testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Uses a app for 1 minute",
                  "fullTitle": "Fixture 1 Resource usage testing Uses a app for 1 minute",
                  "timedOut": null,
                  "duration": 77679,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile Testing/Samsung.js\" usageTest', {\n  timeout: 90000\n});",
                  "err": {},
                  "uuid": "403e3af3-43a0-4ec2-9a51-e057b311d57d",
                  "parentUUID": "435dd595-9423-4917-aadc-73f175acaf25",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Checks the data usage after using the app",
                  "fullTitle": "Fixture 1 Resource usage testing Checks the data usage after using the app",
                  "timedOut": null,
                  "duration": 22202,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "Login(fixtureData.phoneNumber, fixtureData.password);\ncy.wait(10000);\ncy.get(\"p.list_title\").contains(fixtureData.dashboardName).should(\"exist\");\n// cy.contains(\"p.list_title\", \"Of Rs 25 Data\")\n//   .closest(\".single_list\")\n//   .find(\".progress-bar\")\n//   .invoke(\"attr\", \"aria-valuenow\")\n//   .then((value) => {\n//     const currentValue = parseInt(value.replace(\"%\", \"\"), 10);\n//     expect(currentValue).to.be.lessThan(100);\n//   });\nconst packNameToCheck = fixtureData.packName; // Retrieve the pack name from the fixture\n// Find the pack-related element\ncy.contains(\".list_title\", packNameToCheck).then($packElement => {\n  // Traverse to the progress bar associated with this pack\n  const progressBar = $packElement.closest(\".single_list\").find(\".progress-bar\");\n  // Get the width of the progress bar\n  const progressBarWidth = parseFloat(progressBar.css(\"width\"));\n  // Assert the progress bar value is less than 100% (change the condition based on your requirement)\n  expect(progressBarWidth).to.be.lessThan(100);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `p.list_title`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `p.list_title`, but never found it.\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:169:9)",
                    "diff": null
                  },
                  "uuid": "8926a9fe-cc39-4fb4-b968-4938aec8846a",
                  "parentUUID": "435dd595-9423-4917-aadc-73f175acaf25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "403e3af3-43a0-4ec2-9a51-e057b311d57d"
              ],
              "failures": [
                "8926a9fe-cc39-4fb4-b968-4938aec8846a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 99881,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f3bcb953-245a-4f6a-a7c9-6b86c0034937",
              "title": "Multiple activation testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "checks if multiple activation is allowed or not",
                  "fullTitle": "Fixture 1 Multiple activation testing checks if multiple activation is allowed or not",
                  "timedOut": null,
                  "duration": 521,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.log(fixtureData.packName);\ncy.log(fixtureData.packResource);\ncy.log(fixtureData.balance);\ncy.log(fixtureData.dashboardName);",
                  "err": {},
                  "uuid": "846e4ec5-0b43-427c-ae59-b20f0ff10a3a",
                  "parentUUID": "f3bcb953-245a-4f6a-a7c9-6b86c0034937",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "846e4ec5-0b43-427c-ae59-b20f0ff10a3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 521,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "432f716a-ba76-4909-853c-459ece97c2ea",
          "title": "Fixture 2",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ba274657-60f0-4c5a-8e83-bc8d33357059",
              "title": "low balance testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "checks if the balance is enough to buy the data pack",
                  "fullTitle": "Fixture 2 low balance testing checks if the balance is enough to buy the data pack",
                  "timedOut": null,
                  "duration": 32538,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" balance', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});\ncy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n  const parsedBalance = parseFloat(data.balance);\n  const packValueString = fixtureData.pack;\n  const match = packValueString.match(/\\d+/);\n  const packValue = parseInt(match[0]);\n  console.log(parsedBalance, \"parsedbalance\");\n  console.log(match[0], \"packvalue\");\n  if (parsedBalance < match[0]) {\n    cy.log(\"Balance is insufficient to buy the data pack\");\n    expect(parsedBalance).to.be.lessThan(packValue);\n  } else if (parsedBalance >= match[0]) {\n    cy.log(\"Balance is sufficient to buy the data pack\");\n    expect(parsedBalance).to.be.gte(packValue);\n  } else {\n    throw new Error(\"Invalid balance value\");\n  }\n});",
                  "err": {},
                  "uuid": "182cd6f5-693e-4736-ab72-7fe73d768d51",
                  "parentUUID": "ba274657-60f0-4c5a-8e83-bc8d33357059",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "buys the Rs 265 voice pack",
                  "fullTitle": "Fixture 2 low balance testing buys the Rs 265 voice pack",
                  "timedOut": null,
                  "duration": 31467,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(\"https://www.ncell.axiata.com/en/individual/data-and-voice?packageCategories=data-packs\");\ncy.contains(\"Load More\").click();\ncy.wait(2000);\n// cy.contains(testData.packName).click();\ncy.contains(fixtureData.pack).click();\ncy.contains(\"Buy Now\").click();\ncy.get('[name=\"phoneNumber\"]').type(fixtureData.phoneNumber);\ncy.contains(\"Continue\").click();\ncy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" otp BuyOTP', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(otpObject => {\n    const otp = otpObject.BuyOTP;\n    cy.log(`Read OTP value: ${otp}`);\n    for (let i = 0; i < otp.length; i++) {\n      cy.get(`input[aria-label*=\"Character ${i + 1}\"]`).type(otp.charAt(i));\n    }\n  });\n  cy.contains(\"Continue\").click();\n  cy.contains(\"Insufficient Balance\").should(\"be.visible\");\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Rs. 200' but never did.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Rs. 200' but never did.\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:62:9)",
                    "diff": null
                  },
                  "uuid": "591ff8b7-e2f9-4991-93b0-aee39096d434",
                  "parentUUID": "ba274657-60f0-4c5a-8e83-bc8d33357059",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "182cd6f5-693e-4736-ab72-7fe73d768d51"
              ],
              "failures": [
                "591ff8b7-e2f9-4991-93b0-aee39096d434"
              ],
              "pending": [],
              "skipped": [],
              "duration": 64005,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "86bbc863-4fa9-4a8b-8004-f4275561cdf1",
              "title": "adequate balance testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "checks if the balance is enough to buy the data pack",
                  "fullTitle": "Fixture 2 adequate balance testing checks if the balance is enough to buy the data pack",
                  "timedOut": null,
                  "duration": 1117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n  const parsedBalance = parseFloat(data.balance);\n  const packValueString = fixtureData.pack;\n  const match = packValueString.match(/\\d+/);\n  const packValue = parseInt(match[0]);\n  console.log(parsedBalance, \"parsedbalance\");\n  console.log(match[0], \"packvalue\");\n  if (parsedBalance < match[0]) {\n    cy.log(\"Balance is insufficient to buy the data pack\");\n    expect(parsedBalance).to.be.lessThan(packValue);\n  } else if (parsedBalance >= match[0]) {\n    cy.log(\"Balance is sufficient to buy the data pack\");\n  } else {\n    throw new Error(\"Invalid balance value\");\n  }\n});",
                  "err": {},
                  "uuid": "2311e791-7be4-47ab-8574-3752fb03293c",
                  "parentUUID": "86bbc863-4fa9-4a8b-8004-f4275561cdf1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "buys the Rs 265 voice pack",
                  "fullTitle": "Fixture 2 adequate balance testing buys the Rs 265 voice pack",
                  "timedOut": null,
                  "duration": 45017,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" buyDataPack', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});",
                  "err": {},
                  "uuid": "2823484f-8d7e-459e-97cd-b3970c0719ac",
                  "parentUUID": "86bbc863-4fa9-4a8b-8004-f4275561cdf1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "checks if the product has been activated or not",
                  "fullTitle": "Fixture 2 adequate balance testing checks if the product has been activated or not",
                  "timedOut": null,
                  "duration": 28442,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(\"https://www.ncell.axiata.com/en/auth/login\");\nLogin(fixtureData.phoneNumber, fixtureData.password);\ncy.wait(10000);\ncy.contains(fixtureData.packName);\ncy.contains(\"button.btn_secondary.btm__btn\", \"Details\").click();\ncy.contains(fixtureData.packResource);\ncy.get(\"p.list_title\").contains(fixtureData.dashboardName);\ncy.contains(\"p.list_title\", fixtureData.dashboardName).closest(\".single_list\") //.closest finds the closest element in regards to the parent element\n.find(\".progress-bar\").should(\"have.attr\", \"aria-valuenow\", \"100%\");\ncy.contains();",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1 Day - 900MB' but never did.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1 Day - 900MB' but never did.\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:141:9)",
                    "diff": null
                  },
                  "uuid": "79b05bb0-473f-4f37-81b7-57f35e81baa5",
                  "parentUUID": "86bbc863-4fa9-4a8b-8004-f4275561cdf1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2311e791-7be4-47ab-8574-3752fb03293c",
                "2823484f-8d7e-459e-97cd-b3970c0719ac"
              ],
              "failures": [
                "79b05bb0-473f-4f37-81b7-57f35e81baa5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 74576,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "67cc93f6-53c3-4afb-9bd0-02b6c47ae6d3",
              "title": "Resource usage testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Uses a app for 1 minute",
                  "fullTitle": "Fixture 2 Resource usage testing Uses a app for 1 minute",
                  "timedOut": null,
                  "duration": 78259,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile Testing/Samsung.js\" usageTest', {\n  timeout: 90000\n});",
                  "err": {},
                  "uuid": "f0436095-9b0c-426e-b7df-42264aeb88b6",
                  "parentUUID": "67cc93f6-53c3-4afb-9bd0-02b6c47ae6d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Checks the data usage after using the app",
                  "fullTitle": "Fixture 2 Resource usage testing Checks the data usage after using the app",
                  "timedOut": null,
                  "duration": 25185,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "Login(fixtureData.phoneNumber, fixtureData.password);\ncy.wait(10000);\ncy.get(\"p.list_title\").contains(fixtureData.dashboardName).should(\"exist\");\n// cy.contains(\"p.list_title\", \"Of Rs 25 Data\")\n//   .closest(\".single_list\")\n//   .find(\".progress-bar\")\n//   .invoke(\"attr\", \"aria-valuenow\")\n//   .then((value) => {\n//     const currentValue = parseInt(value.replace(\"%\", \"\"), 10);\n//     expect(currentValue).to.be.lessThan(100);\n//   });\nconst packNameToCheck = fixtureData.packName; // Retrieve the pack name from the fixture\n// Find the pack-related element\ncy.contains(\".list_title\", packNameToCheck).then($packElement => {\n  // Traverse to the progress bar associated with this pack\n  const progressBar = $packElement.closest(\".single_list\").find(\".progress-bar\");\n  // Get the width of the progress bar\n  const progressBarWidth = parseFloat(progressBar.css(\"width\"));\n  // Assert the progress bar value is less than 100% (change the condition based on your requirement)\n  expect(progressBarWidth).to.be.lessThan(100);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `p.list_title`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `p.list_title`, but never found it.\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:169:9)",
                    "diff": null
                  },
                  "uuid": "1aff5c14-37d8-4c62-8171-cf1afdd73b98",
                  "parentUUID": "67cc93f6-53c3-4afb-9bd0-02b6c47ae6d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0436095-9b0c-426e-b7df-42264aeb88b6"
              ],
              "failures": [
                "1aff5c14-37d8-4c62-8171-cf1afdd73b98"
              ],
              "pending": [],
              "skipped": [],
              "duration": 103444,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "982b7682-4632-441a-90e3-88fe7edc7c36",
              "title": "Multiple activation testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "checks if multiple activation is allowed or not",
                  "fullTitle": "Fixture 2 Multiple activation testing checks if multiple activation is allowed or not",
                  "timedOut": null,
                  "duration": 585,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.log(fixtureData.packName);\ncy.log(fixtureData.packResource);\ncy.log(fixtureData.balance);\ncy.log(fixtureData.dashboardName);",
                  "err": {},
                  "uuid": "3fd43ce7-4b3a-43a2-b2e4-8730f7f3e6bd",
                  "parentUUID": "982b7682-4632-441a-90e3-88fe7edc7c36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fd43ce7-4b3a-43a2-b2e4-8730f7f3e6bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 585,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "reportFilename": "[name]-report",
        "overwrite": true,
        "html": true,
        "json": true,
        "inline": true,
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}