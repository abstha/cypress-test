{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-21T07:49:40.684Z",
    "end": "2023-11-21T07:54:23.240Z",
    "duration": 282556,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "966398cc-ddde-42b3-aae0-a798a460b304",
      "title": "",
      "fullFile": "cypress\\e2e\\SanityTesting.cy.js",
      "file": "cypress\\e2e\\SanityTesting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e754db79-7280-4ebd-b47b-ba8a618b48d0",
          "title": "low balance testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if the balance is enough to buy the data pack",
              "fullTitle": "low balance testing checks if the balance is enough to buy the data pack",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n    const parsedBalance = parseFloat(data.balance);\n    const packValueString = testData.pack;\n    const match = packValueString.match(/\\d+/);\n    const packValue = parseInt(match[0]);\n    console.log(parsedBalance, \"parsedbalance\");\n    console.log(match[0], \"packvalue\");\n    if (parsedBalance < match[0]) {\n      cy.log(\"Balance is insufficient to buy the data pack\");\n      expect(parsedBalance).to.be.lessThan(packValue);\n    } else if (parsedBalance >= match[0]) {\n      cy.log(\"Balance is sufficient to buy the data pack\");\n      expect(parsedBalance).to.be.gte(packValue);\n    } else {\n      throw new Error(\"Invalid balance value\");\n    }\n  });\n});",
              "err": {},
              "uuid": "1a2ca457-5f20-47b0-96ec-cfb7f1bcce75",
              "parentUUID": "e754db79-7280-4ebd-b47b-ba8a618b48d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buys the Rs 265 voice pack",
              "fullTitle": "low balance testing buys the Rs 265 voice pack",
              "timedOut": null,
              "duration": 62712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.visit(\"https://www.ncell.axiata.com/en/individual/data-and-voice?packageCategories=data-packs\");\n  cy.contains(\"Load More\").click();\n  cy.wait(2000);\n  cy.contains(testData.packName).click();\n  cy.contains(\"Buy Now\").click();\n  cy.get('[name=\"phoneNumber\"]').type(testData.phoneNumber);\n  cy.contains(\"Continue\").click();\n  cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" otp BuyOTP', {\n    log: true\n  }).then(({\n    stdout,\n    stderr\n  }) => {\n    if (stdout) {\n      cy.log(`Standard output:\\n${stdout}`);\n    }\n    if (stderr) {\n      cy.log(`Error output:\\n${stderr}`);\n    }\n    cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(otpObject => {\n      const otp = otpObject.BuyOTP;\n      cy.log(`Read OTP value: ${otp}`);\n      for (let i = 0; i < otp.length; i++) {\n        cy.get(`input[aria-label*=\"Character ${i + 1}\"]`).type(otp.charAt(i));\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "fc401d48-d828-4cc8-a767-2107c11cbed8",
              "parentUUID": "e754db79-7280-4ebd-b47b-ba8a618b48d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a2ca457-5f20-47b0-96ec-cfb7f1bcce75",
            "fc401d48-d828-4cc8-a767-2107c11cbed8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b86f5f3-2b43-41cc-9242-9cd2847f65a3",
          "title": "adequate balance testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if the balance is enough to buy the data pack",
              "fullTitle": "adequate balance testing checks if the balance is enough to buy the data pack",
              "timedOut": null,
              "duration": 700,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n    const parsedBalance = parseFloat(data.balance);\n    const packValueString = testData.pack;\n    const match = packValueString.match(/\\d+/);\n    const packValue = parseInt(match[0]);\n    console.log(parsedBalance, \"parsedbalance\");\n    console.log(match[0], \"packvalue\");\n    if (parsedBalance < match[0]) {\n      cy.log(\"Balance is insufficient to buy the data pack\");\n      expect(parsedBalance).to.be.lessThan(packValue);\n    } else if (parsedBalance >= match[0]) {\n      cy.log(\"Balance is sufficient to buy the data pack\");\n    } else {\n      throw new Error(\"Invalid balance value\");\n    }\n  });\n});",
              "err": {},
              "uuid": "f7f975c1-53fa-4a43-9d1a-99d950b67346",
              "parentUUID": "0b86f5f3-2b43-41cc-9242-9cd2847f65a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buys the Rs 265 voice pack",
              "fullTitle": "adequate balance testing buys the Rs 265 voice pack",
              "timedOut": null,
              "duration": 32408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" buyDataPack', {\n  log: true\n}).then(({\n  stdout,\n  stderr\n}) => {\n  if (stdout) {\n    cy.log(`Standard output:\\n${stdout}`);\n  }\n  if (stderr) {\n    cy.log(`Error output:\\n${stderr}`);\n  }\n});",
              "err": {},
              "uuid": "a67c8d2b-5951-4c3c-89d4-8e1406f8c4df",
              "parentUUID": "0b86f5f3-2b43-41cc-9242-9cd2847f65a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks if the product has been activated or not",
              "fullTitle": "adequate balance testing checks if the product has been activated or not",
              "timedOut": null,
              "duration": 19546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.ncell.axiata.com/en/auth/login\");\ncy.fixture(\"TestData.json\").then(testData => {\n  Login(testData.phoneNumber, testData.password);\n  cy.wait(10000);\n  cy.contains(testData.packName);\n  cy.contains(\"button.btn_secondary.btm__btn\", \"Details\").click();\n  cy.contains(testData.packResource);\n  cy.get(\"p.list_title\").contains(testData.dashboardName);\n  cy.contains(\"p.list_title\", testData.dashboardName).closest(\".single_list\") // Use closest to find the ancestor element\n  .find(\".progress-bar\").should(\"have.attr\", \"aria-valuenow\", \"100%\");\n});",
              "err": {},
              "uuid": "a58bae28-6a89-4e6b-b78d-164c02aee9ba",
              "parentUUID": "0b86f5f3-2b43-41cc-9242-9cd2847f65a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7f975c1-53fa-4a43-9d1a-99d950b67346",
            "a67c8d2b-5951-4c3c-89d4-8e1406f8c4df",
            "a58bae28-6a89-4e6b-b78d-164c02aee9ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52654,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "852bee55-31a0-4eca-9d04-2e698797bbd3",
          "title": "Resource usage testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Uses a app for 1 minute",
              "fullTitle": "Resource usage testing Uses a app for 1 minute",
              "timedOut": null,
              "duration": 23374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile Testing/Samsung.js\" usageTest', {\n  timeout: 61000\n});",
              "err": {},
              "uuid": "b431dfe6-1802-4c61-82e0-af88c741a2d9",
              "parentUUID": "852bee55-31a0-4eca-9d04-2e698797bbd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the data usage after using the app",
              "fullTitle": "Resource usage testing Checks the data usage after using the app",
              "timedOut": null,
              "duration": 16588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  Login(testData.phoneNumber, testData.password);\n  cy.wait(10000);\n  cy.get(\"p.list_title\").contains(testData.dashboardName).should(\"exist\");\n  // cy.contains(\"p.list_title\", \"Of Rs 25 Data\")\n  //   .closest(\".single_list\")\n  //   .find(\".progress-bar\")\n  //   .invoke(\"attr\", \"aria-valuenow\")\n  //   .then((value) => {\n  //     const currentValue = parseInt(value.replace(\"%\", \"\"), 10);\n  //     expect(currentValue).to.be.lessThan(100);\n  //   });\n});",
              "err": {},
              "uuid": "ce5d9566-c961-4de2-ba31-17ce39b1c29d",
              "parentUUID": "852bee55-31a0-4eca-9d04-2e698797bbd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b431dfe6-1802-4c61-82e0-af88c741a2d9",
            "ce5d9566-c961-4de2-ba31-17ce39b1c29d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5337783b-0e9b-435b-b423-11415c26fc89",
          "title": "Multiple activation testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if multiple activation is allowed or not",
              "fullTitle": "Multiple activation testing checks if multiple activation is allowed or not",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.log(testData.packName);\n  cy.log(testData.packResource);\n  cy.log(testData.balance);\n  cy.log(testData.dashboardName);\n});",
              "err": {},
              "uuid": "db8fd53b-017b-41ec-afc9-164be3336bd9",
              "parentUUID": "5337783b-0e9b-435b-b423-11415c26fc89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks the priority between two packs according to their validity",
              "fullTitle": "Multiple activation testing checks the priority between two packs according to their validity",
              "timedOut": null,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6d026b87-cf55-4858-b19a-6d900e0c7b2a",
              "parentUUID": "5337783b-0e9b-435b-b423-11415c26fc89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db8fd53b-017b-41ec-afc9-164be3336bd9",
            "6d026b87-cf55-4858-b19a-6d900e0c7b2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": true,
        "html": true,
        "json": true,
        "inline": true
      },
      "version": "6.2.0"
    }
  }
}