{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-20T08:52:16.873Z",
    "end": "2023-11-20T08:53:51.911Z",
    "duration": 95038,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "954f23be-84e6-48b6-b314-8fd6454edefd",
      "title": "",
      "fullFile": "cypress\\e2e\\SanityTesting.cy.js",
      "file": "cypress\\e2e\\SanityTesting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70686693-a8a2-4981-a40c-8971ebf44aa3",
          "title": "low balance testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks if the balance is enough to buy the data pack",
              "fullTitle": "low balance testing checks if the balance is enough to buy the data pack",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(data => {\n    const parsedBalance = parseFloat(data.balance);\n    const packValueString = testData.pack;\n    const match = packValueString.match(/\\d+/);\n    const packValue = parseInt(match[0]);\n    console.log(parsedBalance, \"parsedbalance\");\n    console.log(match[0], \"packvalue\");\n    if (parsedBalance < match[0]) {\n      cy.log(\"Balance is insufficient to buy the data pack\");\n      expect(parsedBalance).to.be.lessThan(packValue);\n      passed = true;\n    } else if (parsedBalance >= match[0]) {\n      cy.log(\"Balance is sufficient to buy the data pack\");\n      expect(parsedBalance).to.be.gte(packValue);\n      passed = true;\n    } else {\n      throw new Error(\"Invalid balance value\");\n    }\n  });\n});",
              "err": {},
              "uuid": "a1534ab2-4222-4a26-80ab-9e072bcbe1e2",
              "parentUUID": "70686693-a8a2-4981-a40c-8971ebf44aa3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buys the Rs 265 voice pack",
              "fullTitle": "low balance testing buys the Rs 265 voice pack",
              "timedOut": null,
              "duration": 640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"TestData.json\").then(testData => {\n  cy.visit(\"https://www.ncell.axiata.com/en/individual/data-and-voice?packageCategories=data-packs\");\n  cy.contains(\"Load More\").click();\n  cy.wait(2000);\n  cy.contains(testData.packName).click();\n  cy.contains(\"Buy Now\").click();\n  cy.get('[name=\"phoneNumber\"]').type(testData.phoneNumber);\n  cy.contains(\"Continue\").click();\n  cy.exec('node \"C:/Users/abhinav/Desktop/automation tests/Mobile testing/Samsung.js\" otp BuyOTP', {\n    log: true\n  }).then(({\n    stdout,\n    stderr\n  }) => {\n    if (stdout) {\n      cy.log(`Standard output:\\n${stdout}`);\n    }\n    if (stderr) {\n      cy.log(`Error output:\\n${stderr}`);\n    }\n    cy.readFile(\"C:/Users/abhinav/Desktop/automation tests/cypress test/resourceDetails/OTP.json\", \"utf8\").then(otpObject => {\n      const otp = otpObject.BuyOTP;\n      cy.log(`Read OTP value: ${otp}`);\n      for (let i = 0; i < otp.length; i++) {\n        cy.get(`input[aria-label*=\"Character ${i + 1}\"]`).type(otp.charAt(i));\n      }\n    });\n    passed = true;\n  });\n});",
              "err": {
                "message": "TypeError: i.createWriteStream is not a function\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail",
                "estack": "TypeError: i.createWriteStream is not a function\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail\n    at M.writeFile (webpack://cypress-test/./node_modules/exceljs/dist/exceljs.min.js:3:234388)\n    at Context.eval (webpack://cypress-test/./cypress/e2e/SanityTesting.cy.js:17:5)",
                "diff": null
              },
              "uuid": "ba439fc2-6f49-4154-805c-c958ae383cfb",
              "parentUUID": "70686693-a8a2-4981-a40c-8971ebf44aa3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1534ab2-4222-4a26-80ab-9e072bcbe1e2"
          ],
          "failures": [
            "ba439fc2-6f49-4154-805c-c958ae383cfb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": true,
        "html": true,
        "json": true,
        "inline": true
      },
      "version": "6.2.0"
    }
  }
}